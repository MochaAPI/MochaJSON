"use strict";(globalThis.webpackChunkmochaapi_client_docs=globalThis.webpackChunkmochaapi_client_docs||[]).push([[398],{6349:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>r,default:()=>d,frontMatter:()=>l,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"examples/basic-usage","title":"Basic Usage Examples","description":"Dead simple examples showing MochaJSON v1.0.0\'s stateless design with no setup required.","source":"@site/docs/examples/basic-usage.md","sourceDirName":"examples","slug":"/examples/basic-usage","permalink":"/MochaJSON/examples/basic-usage","draft":false,"unlisted":false,"editUrl":"https://github.com/MochaAPI/MochaJSON/tree/main/docs/docs/examples/basic-usage.md","tags":[],"version":"current","frontMatter":{"title":"Basic Usage Examples","description":"Dead simple examples showing MochaJSON v1.0.0\'s stateless design with no setup required.","keywords":["basic usage","simple examples","stateless design","no setup"]}}');var i=s(4848),a=s(8453);const l={title:"Basic Usage Examples",description:"Dead simple examples showing MochaJSON v1.0.0's stateless design with no setup required.",keywords:["basic usage","simple examples","stateless design","no setup"]},r="Basic Usage Examples",o={},c=[{value:"Hello World",id:"hello-world",level:2},{value:"Simple GET Request",id:"simple-get-request",level:2},{value:"Simple POST Request",id:"simple-post-request",level:2},{value:"With POJO Classes",id:"with-pojo-classes",level:2},{value:"Error Handling",id:"error-handling",level:2},{value:"Kotlin Examples",id:"kotlin-examples",level:2},{value:"Basic Kotlin",id:"basic-kotlin",level:3},{value:"Kotlin with Data Classes",id:"kotlin-with-data-classes",level:3},{value:"Kotlin Extension Functions",id:"kotlin-extension-functions",level:3},{value:"Key Points",id:"key-points",level:2}];function p(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"basic-usage-examples",children:"Basic Usage Examples"})}),"\n",(0,i.jsx)(n.p,{children:"Dead simple examples showing MochaJSON v1.0.0's stateless design with no setup required."}),"\n",(0,i.jsx)(n.h2,{id:"hello-world",children:"Hello World"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'import io.mochaapi.client.*;\n\npublic class HelloWorld {\n    public static void main(String[] args) {\n        try {\n            // Just use it - no setup needed\n            Map<String, Object> data = Api.get("https://jsonplaceholder.typicode.com/users/1")\n                .execute()\n                .toMap();\n            \n            System.out.println("Hello, " + data.get("name") + "!");\n            \n        } catch (Exception e) {\n            System.err.println("Error: " + e.getMessage());\n        }\n    }\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"simple-get-request",children:"Simple GET Request"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'import io.mochaapi.client.*;\n\npublic class SimpleGet {\n    public static void main(String[] args) {\n        try {\n            // GET request with automatic JSON parsing\n            Map<String, Object> user = Api.get("https://jsonplaceholder.typicode.com/users/1")\n                .execute()\n                .toMap();\n            \n            System.out.println("User ID: " + user.get("id"));\n            System.out.println("Name: " + user.get("name"));\n            System.out.println("Email: " + user.get("email"));\n            \n        } catch (Exception e) {\n            System.err.println("Error: " + e.getMessage());\n        }\n    }\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"simple-post-request",children:"Simple POST Request"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'import io.mochaapi.client.*;\nimport java.util.Map;\n\npublic class SimplePost {\n    public static void main(String[] args) {\n        try {\n            // POST request with JSON body\n            Map<String, Object> newPost = Map.of(\n                "title", "My Post",\n                "body", "This is the content of my post",\n                "userId", 1\n            );\n            \n            Map<String, Object> result = Api.post("https://jsonplaceholder.typicode.com/posts")\n                .body(newPost)\n                .execute()\n                .toMap();\n            \n            System.out.println("Created post with ID: " + result.get("id"));\n            \n        } catch (Exception e) {\n            System.err.println("Error: " + e.getMessage());\n        }\n    }\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"with-pojo-classes",children:"With POJO Classes"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'import io.mochaapi.client.*;\n\npublic class PojoExample {\n    public static void main(String[] args) {\n        try {\n            // GET request \u2192 POJO\n            User user = Api.get("https://jsonplaceholder.typicode.com/users/1")\n                .execute()\n                .to(User.class);\n            \n            System.out.println("User: " + user.name);\n            System.out.println("Email: " + user.email);\n            System.out.println("Website: " + user.website);\n            \n        } catch (Exception e) {\n            System.err.println("Error: " + e.getMessage());\n        }\n    }\n    \n    public static class User {\n        public int id;\n        public String name;\n        public String email;\n        public String website;\n        \n        public User() {}\n    }\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"error-handling",children:"Error Handling"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'import io.mochaapi.client.*;\n\npublic class ErrorHandling {\n    public static void main(String[] args) {\n        try {\n            Map<String, Object> data = Api.get("https://jsonplaceholder.typicode.com/users/1")\n                .execute()\n                .toMap();\n            \n            System.out.println("Success: " + data.get("name"));\n            \n        } catch (ApiException e) {\n            System.err.println("API Error: " + e.getMessage());\n            System.err.println("Status Code: " + e.getStatusCode());\n        } catch (JsonException e) {\n            System.err.println("JSON Error: " + e.getMessage());\n        } catch (Exception e) {\n            System.err.println("Unexpected Error: " + e.getMessage());\n        }\n    }\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"kotlin-examples",children:"Kotlin Examples"}),"\n",(0,i.jsx)(n.h3,{id:"basic-kotlin",children:"Basic Kotlin"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-kotlin",children:'import io.mochaapi.client.*\n\nfun main() {\n    try {\n        val data = Api.get("https://jsonplaceholder.typicode.com/users/1")\n            .execute()\n            .toMap()\n        \n        println("Hello, ${data["name"]}!")\n        \n    } catch (e: Exception) {\n        println("Error: ${e.message}")\n    }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"kotlin-with-data-classes",children:"Kotlin with Data Classes"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-kotlin",children:'import io.mochaapi.client.*\n\ndata class User(\n    val id: Int,\n    val name: String,\n    val email: String,\n    val website: String\n)\n\nfun main() {\n    try {\n        val user = Api.get("https://jsonplaceholder.typicode.com/users/1")\n            .execute()\n            .to(User::class.java)\n        \n        println("User: ${user.name}")\n        println("Email: ${user.email}")\n        \n    } catch (e: Exception) {\n        println("Error: ${e.message}")\n    }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"kotlin-extension-functions",children:"Kotlin Extension Functions"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-kotlin",children:'import io.mochaapi.client.*\n\n// Extension function for cleaner syntax\nfun <T> ApiRequest.fetchAs(clazz: Class<T>): T = \n    execute().to(clazz)\n\nfun main() {\n    try {\n        val user = Api.get("https://jsonplaceholder.typicode.com/users/1")\n            .fetchAs(User::class.java)\n        \n        println("User: ${user.name}")\n        \n    } catch (e: Exception) {\n        println("Error: ${e.message}")\n    }\n}\n\ndata class User(\n    val id: Int,\n    val name: String,\n    val email: String\n)\n'})}),"\n",(0,i.jsx)(n.h2,{id:"key-points",children:"Key Points"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\u2705 ",(0,i.jsx)(n.strong,{children:"No Setup Required"})," - Just import and use"]}),"\n",(0,i.jsxs)(n.li,{children:["\u2705 ",(0,i.jsx)(n.strong,{children:"No Shutdown Needed"})," - Library is stateless"]}),"\n",(0,i.jsxs)(n.li,{children:["\u2705 ",(0,i.jsx)(n.strong,{children:"Automatic JSON Parsing"})," - No manual parsing required"]}),"\n",(0,i.jsxs)(n.li,{children:["\u2705 ",(0,i.jsx)(n.strong,{children:"Simple Error Handling"})," - Clear exception types"]}),"\n",(0,i.jsxs)(n.li,{children:["\u2705 ",(0,i.jsx)(n.strong,{children:"Works with POJOs"})," - Automatic object mapping"]}),"\n",(0,i.jsxs)(n.li,{children:["\u2705 ",(0,i.jsx)(n.strong,{children:"Kotlin Friendly"})," - Great Kotlin support with data classes"]}),"\n"]})]})}function d(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>r});var t=s(6540);const i={},a=t.createContext(i);function l(e){const n=t.useContext(a);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);